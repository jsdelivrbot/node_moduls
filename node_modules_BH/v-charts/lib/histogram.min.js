!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("echarts/lib/echarts"),require("echarts/lib/component/tooltip"),require("echarts/lib/component/legend"),require("echarts/lib/chart/bar")):"function"==typeof define&&define.amd?define(["echarts/lib/echarts","echarts/lib/component/tooltip","echarts/lib/component/legend","echarts/lib/chart/bar"],t):e.VeHistogram=t(e.echarts)}(this,function(e){"use strict";function t(e){var t=e.rows,i=e.dimAxisName,r=e.dimension,n=e.axisVisible;return r.map(function(e){return{type:"category",name:i,nameLocation:"middle",nameGap:22,data:t.map(function(t){return t[e]}),axisLabel:{formatter:function(e){return String(e)}},show:n}})}function i(e){for(var t=e.meaAxisName,i=e.meaAxisType,r={type:"value",axisTick:{show:!1},show:e.axisVisible},n=[],a=0;a<2;a++)!function(e){i[e]?n[e]=Object.assign({},r,{axisLabel:{formatter:function(t){return c(t,i[e])}}}):n[e]=Object.assign({},r),n[e].name=t[e]||""}(a);return n}function r(e){var t=e.axisSite,i=e.isHistogram,r=e.meaAxisType,n=i?t.right:t.top;return{trigger:"axis",formatter:function(e){var t=[];return t.push(e[0].name+"<br>"),e.forEach(function(e){var i=e.seriesName,s=~n.indexOf(i)?r[1]:r[0];t.push(a(e.color)),t.push(i+": "),t.push(c(e.value,s)),t.push("<br>")}),t.join("")}}}function n(e){var t=e.rows,i=e.metrics,r=e.stack,n=e.axisSite,a=e.isHistogram,s=[],o={},c=a?n.right:n.top,u=a?"yAxisIndex":"xAxisIndex",d=r&&l(r);return i.forEach(function(e){o[e]=[]}),t.forEach(function(e){i.forEach(function(t){o[t].push(e[t])})}),!!(s=Object.keys(o).map(function(e){var t=h({name:e,type:"bar",data:o[e]},u,~c.indexOf(e)?"1":"0");return r&&d[e]&&(t.stack=d[e]),t})).length&&s}e="default"in e?e.default:e,"function"!=typeof Object.assign&&(Object.assign=function(e){if(null==e)throw new TypeError("Cannot convert undefined or null to object");e=Object(e);for(var t=1;t<arguments.length;t++){var i=arguments[t];if(null!=i)for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r])}return e}),e.registerTheme("ve-chart",{color:["#19d4ae","#5ab1ef","#fa6e86","#ffb980","#0067a6","#c4b4e4","#d87a80","#9cbbff","#d9d0c7","#87a997","#d49ea2","#5b4947","#7ba3a8"],categoryAxis:{axisLine:{show:!1},axisTick:{show:!1},splitLine:{show:!1}},valueAxis:{axisLine:{show:!1}},line:{smooth:!0},grid:{containLabel:!0,left:10,right:10}});var a=function(e){return['<span style="',"background-color:"+e+";","display: inline-block;","width: 10px;","height: 10px;","border-radius: 50%;","margin-right:2px;",'"></span>'].join("")},s=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;if(isNaN(+e))return e;for(var i=[{value:1e18,symbol:"E"},{value:1e15,symbol:"P"},{value:1e12,symbol:"T"},{value:1e9,symbol:"B"},{value:1e6,symbol:"M"},{value:1e3,symbol:"k"}],r=0;r<i.length;r++)if(Math.abs(e)>=i[r].value)return(e/i[r].value).toFixed(t)+i[r].symbol;return e.toString()},o=function(e){return String(e).replace(/^(\s+|-)?\d+(?=.?\d*($|\s))/g,function(e){return e.replace(/(?=(?!\b)(\d{3})+$)/g,",")})},c=function(e,t){switch(t){case"KMB":return s(e);case"percent":return parseFloat((100*e).toFixed(2))+"%";case"normal":return o(e);default:return e}},l=function(e){var t={};return Object.keys(e).forEach(function(i){e[i].forEach(function(e){t[e]=i})}),t},h=function(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e},u=function(e,a,s,o){var c=s.axisSite,l=void 0===c?{right:[]}:c,h=s.dimension,u=void 0===h?[e[0]]:h,d=s.stack,f=void 0===d?{}:d,p=s.axisVisible,b=void 0===p||p,m=o.tooltipVisible,g=o.legendVisible,y=e.slice();s.metrics?y=s.metrics:y.splice(e.indexOf(u[0]),1);var v=s.yAxisType||["normal","normal"],x=s.yAxisName||[],O=s.xAxisName||"",j=g&&{data:y},A=t({rows:a,dimAxisName:O,dimension:u,axisVisible:b}),k={axisSite:l,isHistogram:!0,meaAxisType:v};return{legend:j,yAxis:i({meaAxisName:x,meaAxisType:v,axisVisible:b}),series:n({rows:a,metrics:y,stack:f,axisSite:l,isHistogram:!0}),xAxis:A,tooltip:m&&r(k)}};return{render:function(){var e=this,t=e.$createElement;return(e._self._c||t)("div",{ref:"canvas",staticClass:"ve-histogram",style:e.canvasStyle})},staticRenderFns:[],name:"VeHistogram",mixins:[{props:{data:{type:[Object,Array],default:null},settings:{type:Object,default:function(){return{}}},width:{type:String,default:"auto"},height:{type:String,default:"400px"},beforeConfig:{type:Function},afterConfig:{type:Function},events:{type:Object},grid:{type:Object},colors:{type:Array},tooltipVisible:{type:Boolean,default:!0},legendVisible:{type:Boolean,default:!0},legendPosition:{type:String},markLine:{type:Object},markArea:{type:Object},markPoint:{type:Object},visualMap:{type:[Object,Array]},dataZoom:{type:[Object,Array]},toolbox:{type:Object},initOptions:{type:Object,default:function(){return{}}}},watch:{data:{deep:!0,handler:function(e){e&&this.dataHandler(e)}},settings:{deep:!0,handler:function(e){e.type&&this.chartLib&&(this.chartHandler=this.chartLib[e.type]),this.dataHandler(this.data)}}},computed:{canvasStyle:function(){return{width:this.width,height:this.height,position:"relative"}}},methods:{dataHandler:function(e){var t=this;if(this.chartHandler){if(!e||!Array.isArray(e.columns)||!Array.isArray(e.rows))return!1;var i=e,r=i.columns,n=i.rows,a={tooltipVisible:this.tooltipVisible,legendVisible:this.legendVisible};this.beforeConfig&&(e=this.beforeConfig(e));var s=this.chartHandler(r,n,this.settings,a);if(s){if(this.colors&&(s.color=this.colors),this.grid&&(s.grid=this.grid),this.legendPosition&&s.legend&&(s.legend[this.legendPosition]=10,~["left","right"].indexOf(this.legendPosition)&&(s.legend.top="middle",s.legend.orient="vertical")),this.dataZoom&&(s.dataZoom=this.dataZoom),this.visualMap&&(s.visualMap=this.visualMap),this.toolbox&&(s.toolbox=this.toolbox),this.markArea||this.markLine||this.markPoint){var o={markArea:this.markArea,markLine:this.markLine,markPoint:this.markPoint},c=s.series;"[object Array]"===this.getType(c)?c.forEach(function(e){t.addMark(e,o)}):"[object Object]"===this.getType(c)&&this.addMark(c,o)}this.afterConfig&&(s=this.afterConfig(s)),this.echarts.setOption(s,!0)}}},addMark:function(e,t){Object.keys(t).forEach(function(i){t[i]&&(e[i]=t[i])})},getType:function(e){return Object.prototype.toString.call(e)},init:function(){this.echarts||(this.echarts=this.echartsLib.init(this.$refs.canvas,"ve-chart",this.initOptions),this.data&&this.dataHandler(this.data),this.events&&this.bindEvents())},bindEvents:function(){var e=this;Object.keys(this.events).forEach(function(t){e.echarts.on(t,e.events[t])})}},mounted:function(){var e=this;this.$nextTick(function(){e.init(),window.addEventListener("resize",e.echarts.resize)})},beforeDestory:function(){window.removeEventListener("resize",this.echarts.resize),this.echarts.dispose()}}],created:function(){this.chartHandler=u,this.echartsLib=e}}});
